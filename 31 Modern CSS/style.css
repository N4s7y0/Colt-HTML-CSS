/* references the html selector with higher specificity 
  means variables are usable in the whole document */
:root {
  --brand-color: rgb(87, 124, 19);
  --standard-shadow: 0px 2px 40px rgba(0, 0, 0, 0.15);

  --spacing-sm: 8px;
  --spacing-m: 16px;
  --spacing-l: 32px;
  --spacing-xl: 64px;

  --box-height: 100px;
}

.btn1 {
  background-color: var(--brand-color);
  box-shadow: var(--standard-shadow);
}
h1 {
  color: var(--brand-color);
}
.special-div {
  border: 3px solid var(--brand-color);
}

@media only screen and (max-width: 768px) {
  :root {
    --brand-color: rgb(161, 30, 197);
  }
}

.btn2 {
  padding: var(--spacing-l);
}

@media screen and (max-width: 768px) {
  .btn2 {
    padding: var(--spacing-sm);
  }
}

/* calc let's us do some quick math within CSS
  usually used with a mix of different units */
.box1 {
  background-color: tomato;
  height: 300px;
  width: 40%;
  float: left;
  margin-right: 20px;
}
.box2 {
  background-color: olivedrab;
  height: 300px;
  /* ! */
  width: calc(60% - 20px);
  float: right;
}

hr {
  margin: 20px 0;
}

/* extra rules
  + and - need spaces around them (good style anyway)
  don't divide by 0
  you can nest calcs
  you can use variables */
.box3 {
  background-color: tomato;
  height: 300px;
  width: calc(calc(20% + var(--spacing-xl)) * 2);
  margin-right: 20px;
}

.box4 {
  background-color: cyan;
  width: 600px;
  height: 600px;
  margin: 0 auto;
  position: relative;
}
.tinybox {
  background-color: magenta;
  width: 200px;

  height: var(--box-height);
  position: absolute;
  top: calc(50% - (var(--box-height) / 2));
  left: calc(50% - (200px / 2));
}
