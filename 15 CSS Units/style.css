body {
  margin: 0;
}

/* absolute units are weird. a pixel is not a real screen pixel and a cm is not a real world cm, we dont know display and viewing distance etc. */
.container {
  background-color: purple;
  height: 100px;
  width: 100px;
  margin: 20px;
}

/* percentages are always relative to some other value, sometimes from the parent, sometimes from the element itself */
.box {
  background-color: olive;
  width: 50%;
  height: 50%;
}
#firstp {
  font-size: 40px;
  /* relative to font-size */
  line-height: 200%;
}

/* rem are relative to the root html element's font-size, default font-size for the browser is 16px */
.rem h1 {
  font-size: 6rem;
  color: red;
}
.rem h2 {
  font-size: 4rem;
}
.rem p {
  font-size: 2rem;
}
h1.pixels {
  font-size: 96px;
  color: blue;
}
h2.pixels {
  font-size: 64px;
}
p.pixels {
  font-size: 32px;
}

/* em are relative to the parent (font-size), or the element itself (other properties) */
.main {
  font-size: 20px;
}
.main h1 {
  font-size: 4em;
  margin: 0;
  margin-left: 1em;
}
.main p {
  font-size: 1.5em;
}
.small {
  font-size: 0.7em;
}

/* viewport width and height (viewable area of the browser) */
.view {
  background-color: magenta;
  width: 100%;
  height: 100vh;
}
.view2 {
  background-color: cyan;
  width: 80vw;
  height: 100vh;
}

/* px   - avoid for font-sizes, can use for small details like borders & shadows
rem/em  - goto for font-sizes and padding/margin
%       - useful for defining layouts and widths
vh/vw   - used for larger layout concerns */
